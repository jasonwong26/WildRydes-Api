AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
- AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description: AWS CodeStar projectID used to associate new resources to team members

# Enable blue/green deployments using this Globals section. For instructions, see the AWS CodeStar User Guide:
# https://docs.aws.amazon.com/codestar/latest/userguide/how-to-modify-serverless-project.html?icmpid=docs_acs_rm_tr
#
# Globals:
#   Function:
#     AutoPublishAlias: live
#     DeploymentPreference:
#       Enabled: true
#       Type: Canary10Percent5Minutes

Resources:
  RideTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: !Join ['-', [!Ref 'ProjectId', 'Rides']]
      AttributeDefinitions:
        - AttributeName: "RideId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "RideId"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  LambdaExecRole:
    RoleName: !Join ['-', [!Ref 'ProjectId', 'LambdaRole']]
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Path: /
      Policies:
      - PolicyName: CodeStarLambdaWorkerPolicy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Resource: '*'
            Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
      - PolicyName: DynamoDbReadWritePolicy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Resource: arn:aws:dynamodb:*:*:table/*/index/*
            Effect: Allow
            Action:
            - dynamodb:Scan
            - dynamodb:Query
          - Resource: arn:aws:dynamodb:*:*:table/*
            Effect: Allow
            Action:
            - dynamodb:BatchGetItem
            - dynamodb:PutItem
            - dynamodb:DescribeTable
            - dynamodb:DeleteItem
            - dynamodb:GetItem
            - dynamodb:Scan
            - dynamodb:Query
            - dynamodb:UpdateItem
          - Resource: "*"
            Effect: Allow
            Action: dynamodb:ListTables

  HelloWorld:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs4.3
      Environment:
        Variables:
          NODE_ENV: production
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /
            Method: get
        PostEvent:
          Type: Api
          Properties:
            Path: /
            Method: post
